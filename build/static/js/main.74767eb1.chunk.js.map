{"version":3,"sources":["components/Sidebar.js","components/Banner.js","components/Featured.js","components/Browse.js","components/Player.js","components/Songs.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","event","player","target","playVideo","setVolume","_this","this","react_default","a","createElement","className","onClick","props","home","Object","keys","speakers","map","key","speaker","open","name","lecture","YouTube","videoId","onReady","controls","onStateChange","Component","Banner","Section","selection","title","style","backgroundImage","concat","image","Featured","Featured_Section","featured","self","drugs","east","Browse","src_components_Banner","src_components_Featured","Player","videos","video","Songs","bio","song","play","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","songs","setState","src_components_Player","src_components_Sidebar","bind","src_components_Songs","src_components_Browse","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.74767eb1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Sidebar.scss';\nimport speakers from '../environments/speakers.environment.json';\nimport YouTube from 'react-youtube';\n\nclass Sidebar extends Component {\n    controls(event) {\n        const player = event.target;\n        player.playVideo();\n        player.setVolume(100);\n    }\n\n    render() {\n        return (\n            <div className=\"Sidebar\">\n                <h2 onClick={this.props.home}>Yogi FM</h2>\n                <span className=\"title\">SPEAKERS</span>\n                {\n                    Object.keys(speakers).map(key => {\n                        const speaker = speakers[key];\n                        return (\n                            <span \n                                className=\"link\" \n                                key={key}\n                                onClick={() => {\n                                    this.props.open(key);\n                                }}>\n                                {speaker.name}\n                            </span>\n                        )\n                    })\n                }\n                {\n                    (this.props.lecture)\n                    ? <YouTube \n                        videoId={this.props.lecture} \n                        onReady={this.controls} \n                        controls={0}\n                        onStateChange={this.controls} />\n                    : null\n                }\n            </div>\n        )\n    }\n}\n\nexport default Sidebar;\n","\n    import React, { Component } from 'react';\n    import speakers from '../environments/speakers.environment.json';\n    import './Banner.scss';\n\n    class Banner extends Component {\n        render() {\n            return (this.props.speaker) \n            ? <div className=\"Banner\">\n                You're listening to\n                <h2>{\n                    (this.props.speaker) \n                    ? speakers[this.props.speaker].name\n                    : null\n                }</h2>\n                on Yogi Fm...\n            </div>\n            : <div className=\"Banner\">\n                Welcome to\n                <h2>Nameste</h2>\n                \n            </div>\n        }\n    }\n\n    export default Banner;\n    ","import React, { Component } from 'react';\nimport './Featured.scss';\nimport featured from '../environments/featured.environment.json';\nimport speakers from '../environments/speakers.environment.json';\n\nclass Section extends Component {\n    render() {\n        return (\n            <div>\n                <span className=\"title\">{this.props.selection.title}</span>\n                <div className=\"collection\">\n                    {\n                        this.props.selection.speakers.map(key => {\n                            const speaker = speakers[key];\n                            return (\n                                <div key={key}>\n                                    <div style={{\n                                        backgroundImage: `url(${speaker.image})`\n                                    }} onClick={() => {\n                                        this.props.open(key);\n                                    }}></div>\n                                    <span>{speaker.name}</span>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Featured extends Component {\n    render() {\n        return (\n            <div className=\"Featured\">\n                <Section selection={featured.self} open={this.props.open} />\n                <Section selection={featured.drugs} open={this.props.open} />\n                <Section selection={featured.east} open={this.props.open} />\n            </div>\n        )\n    }\n}\n\nexport default Featured;\n","\n    import React, { Component } from 'react';\n    import Banner from './Banner';\n    import Featured from './Featured';\n    import './Browse.scss';\n\n    class Browse extends Component {\n        render() {\n            return (\n                <div className=\"Browse\">\n                    <Banner speaker={this.props.speaker} />\n                    <Featured open={this.props.open} />\n                </div>\n            )\n        }\n    }\n\n    export default Browse;\n    ","import React, { Component } from 'react';\nimport speakers from '../environments/speakers.environment.json';\nimport './Player.scss';\n\nclass Player extends Component {\n    render() {\n        return (\n            <div className=\"Player\">\n                <div className=\"album\" style={{\n                    backgroundImage: (this.props.speaker) ? `url(${speakers[this.props.speaker].image})` : null\n                }}></div>\n                {/*<div className=\"controls\">\n                    <i className=\"fa fa-backward\"></i>\n                    <i className=\"fa fa-play\"></i>\n                    <i className=\"fa fa-forward\"></i>\n                </div>*/}\n                {\n                    (this.props.speaker) \n                    ? <span><b>{speakers[this.props.speaker].name}:</b> {speakers[this.props.speaker].videos[this.props.video]}</span>\n                    : <span>Click on a speaker to get started...</span>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Player;\n","import React, { Component } from 'react';\nimport speakers from '../environments/speakers.environment.json';\nimport './Songs.scss';\n\nclass Songs extends Component {\n    render() {\n        const speaker = speakers[this.props.speaker];\n        return (\n            <div className=\"Songs\">\n                <div className=\"cover\">\n                    <div className=\"image\" style={{\n                        backgroundImage: `url(${speaker.image})`\n                    }}></div>\n                    <div className=\"bio\">\n                        <h2>{speaker.name}</h2>\n                        <span>{speaker.bio}</span>\n                    </div>\n                </div>\n                <div className=\"song\">\n                    <div><b>Lecture Title</b></div>\n                    <div><b>Speaker</b></div>\n                </div>\n                {\n                    Object.keys(speaker.videos).map(key => {\n                        const song = speaker.videos[key];\n                        return(\n                            <div \n                                key={key} \n                                className=\"song\"\n                                onClick={() => {\n                                    this.props.play(key);\n                                }}>\n                                <div>{song}</div>\n                                <div>{speaker.name}</div>\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        )\n    }\n}\n\nexport default Songs;\n","import React, { Component } from 'react';\nimport './App.scss';\n\nimport Sidebar from './components/Sidebar';\nimport Browse from './components/Browse';\nimport Player from './components/Player';\nimport Songs from './components/Songs';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      speaker: null,\n      lecture: null,\n      songs: false\n    }\n  }\n\n  open(speaker) {\n    this.setState({\n      songs: speaker,\n      speaker: this.state.speaker,\n      lecture: this.state.lecture\n    });\n  }\n\n  home() {\n    this.setState({\n      speaker: this.state.speaker,\n      lecture: this.state.lecture,\n      songs: false\n    });\n  }\n\n  play(lecture) {\n    this.setState({\n      speaker: this.state.songs,\n      lecture: lecture,\n      songs: this.state.songs\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Player speaker={this.state.speaker} video={this.state.lecture} />\n        <Sidebar lecture={this.state.lecture} home={this.home.bind(this)} open={this.open.bind(this)} />\n        { \n          (this.state.songs) \n          ? <Songs speaker={this.state.songs} play={this.play.bind(this)} /> \n          : <Browse open={this.open.bind(this)} speaker={this.state.speaker} /> \n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}